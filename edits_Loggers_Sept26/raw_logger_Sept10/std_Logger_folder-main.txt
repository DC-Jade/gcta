bivar_reml.cpp:124:    LOGGER << nms1.size() << " non-missing phenotypes for trait #1 and " << nms2.size() << " for trait #2" << endl;
bivar_reml.cpp:128:            LOGGER << "Note: the residual covariance component is ignored because no individuals were measured for both traits." << endl;
bivar_reml.cpp:131:            LOGGER << "Note: the residual covariance component is ignored because < 10% of individuals were measured for both traits." << endl;
bivar_reml.cpp:139:    if (_flag_CC) LOGGER << "for trait #1" << endl;
bivar_reml.cpp:142:    if (_flag_CC2) LOGGER << "for trait #2" << endl;
bivar_reml.cpp:145:    if ((_flag_CC && prevalence<-1) || (_flag_CC2 && prevalence2<-1)) LOGGER << "Note: we can specify the disease prevalence by the option --reml-bivar-prevalence so that GCTA can transform the variance explained to the underlying liability scale." << endl;
bivar_reml.cpp:176:        //LOGGER << "Fill Matrix " << pos << " finished" << endl; 
bivar_reml.cpp:186:        //LOGGER << "Fill Matrix " << pos << " finished" << endl; 
bivar_reml.cpp:195:        //LOGGER << "Fill Matrix " << pos << " part 1 finished" << endl; 
bivar_reml.cpp:202:        //LOGGER << "Fill Matrix " << pos << " part2 finished" << endl; 
bivar_reml.cpp:206:        //LOGGER << "Transform the data finished" << endl;
bivar_reml.cpp:231:        LOGGER << "There are " << grm_files.size() << " GRM file names specified in the file [" + grm_file + "]." << endl;
bivar_reml.cpp:234:            LOGGER << "Reading the GRM from the " << k + 1 << "th file ..." << endl;
bivar_reml.cpp:304:    LOGGER << "Constructing the covariances" << endl;
bivar_reml.cpp:339:   // LOGGER << "calcu_Vi_bivar" << endl;
bivar_reml.cpp:352:    //LOGGER << " calcu_Vi_bivar finished" << endl;
bivar_reml.cpp:363:    //LOGGER << "Chop decomposition finished" << endl;
bivar_reml.cpp:395:                LOGGER << "Note: to constrain the correlation being from -1 to 1, a genetic (or residual) variance-covariance matrix is bended to be positive definite. In this case, the SE is unreliable." << endl;
bivar_reml.cpp:446:    LOGGER << "\nCalculating the logLikelihood for the model with the genetic correlation" << (_fixed_rg_val.size() > 1 ? "s" : "") << " being fixed at ";
bivar_reml.cpp:447:    for (int i = 0; i < _fixed_rg_val.size() - 1; i++) LOGGER << _fixed_rg_val[i] << "\t";
bivar_reml.cpp:448:    LOGGER << _fixed_rg_val[_fixed_rg_val.size() - 1] << endl;
data.cpp:95:    LOGGER << "Reading PLINK FAM file from [" + famfile + "]." << endl;
data.cpp:123:    LOGGER << _indi_num << " individuals to be included from [" + famfile + "]." << endl;
data.cpp:150:    LOGGER << "Reading PLINK BIM file from [" + bimfile + "]." << endl;
data.cpp:178:    LOGGER << _snp_num << " SNPs to be included from [" + bimfile + "]." << endl;
data.cpp:193:            LOGGER << "Warning: Duplicated SNP ID \"" + _snp_name[i] + "\" ";
data.cpp:227:    LOGGER << "Reading PLINK BED file from [" + bedfile + "] in SNP-major format ..." << endl;
data.cpp:255:    LOGGER << "Genotype data for " << _keep.size() << " individuals and " << _include.size() << " SNPs to be included from [" + bedfile + "]." << endl;
data.cpp:717:    LOGGER << "Reading map file of the imputed dosage data from [" + zinfofile + "]." << endl;
data.cpp:752:    LOGGER << _snp_num << " SNPs to be included from [" + zinfofile + "]." << endl;
data.cpp:767:    LOGGER << "Reading map file of the imputed dosage data from [" + infofile + "]." << endl;
data.cpp:799:    LOGGER << _snp_num << " SNPs to be included from [" + infofile + "]." << endl;
data.cpp:827:    LOGGER << "Reading dosage data from [" + zdosefile + "] in individual-major format (Note: may use huge RAM)." << endl;
data.cpp:858:    LOGGER << "(Imputed dosage data for " << kp_it.size() << " individuals detected)." << endl;
data.cpp:875:                    LOGGER << "Warning: missing values detected in the dosage data." << endl;
data.cpp:890:    LOGGER << "Imputed dosage data for " << kept_id.size() << " individuals are included from [" << zdosefile << "]." << endl;
data.cpp:937:    LOGGER << "Reading dosage data from [" + dosefile + "] in individual-major format (Note: may use huge RAM)." << endl;
data.cpp:965:    LOGGER << "(Imputed dosage data for " << kp_it.size() << " individuals detected)." << endl;
data.cpp:982:                    LOGGER << "Warning: missing values detected in the dosage data." << endl;
data.cpp:996:    LOGGER << "Imputed dosage data for " << kept_id.size() << " individuals are included from [" << dosefile << "]." << endl;
data.cpp:1031:    LOGGER << "Reading summary information of the imputed SNPs (BEAGLE) ..." << endl;
data.cpp:1062:    LOGGER << _snp_num << " SNPs to be included from [" + zinfofile + "]." << endl;
data.cpp:1084:    LOGGER << "Reading imputed dosage scores (BEAGLE output) ..." << endl;
data.cpp:1097:    LOGGER << _indi_num << " individuals to be included from [" + zdosefile + "]." << endl;
data.cpp:1149:    LOGGER << "Writing genotypes to PLINK BED file [" + OutBedFile + "] ..." << endl;
data.cpp:1191:    LOGGER << "Writing PLINK FAM file to [" + famfile + "] ..." << endl;
data.cpp:1197:    LOGGER << _keep.size() << " individuals to be saved to [" + famfile + "]." << endl;
data.cpp:1205:    LOGGER << "Writing PLINK bim file to [" + bimfile + "] ..." << endl;
data.cpp:1210:    LOGGER << _include.size() << " SNPs to be saved to [" + bimfile + "]." << endl;
data.cpp:1217:    LOGGER << "Converting dosage data into PLINK binary PED format ... " << endl;
data.cpp:1269:    LOGGER << "Reading a list of " << msg << " from [" + snplistfile + "]." << endl;
data.cpp:1282:    LOGGER << _include.size() << " SNPs are extracted from [" + snplistfile + "]." << endl;
data.cpp:1291:    else LOGGER << "Only the SNP [" + snpname + "] is included in the analysis." << endl;
data.cpp:1296:    LOGGER << "Extracting SNPs " << wind_size/1000 << "kb away from the SNP [" << snpname << "] in either direction ..." << endl;
data.cpp:1312:    LOGGER << _include.size() << " SNPs are extracted." << endl;
data.cpp:1317:    LOGGER << "Extracting SNPs " << wind_size/1000 << "kb away from the position [chr=" << chr <<"; bp="<< bp << "] in either direction ..." << endl;
data.cpp:1326:    LOGGER << _include.size() << " SNPs are extracted." << endl;
data.cpp:1335:    LOGGER << prev_size - _include.size() << " SNPs are excluded from [" + snplistfile + "] and there are " << _include.size() << " SNPs remaining." << endl;
data.cpp:1340:    LOGGER << "Excluding SNPs " << wind_size/1000 << "kb away from the SNP [" << snpname << "] in either direction ..." << endl;
data.cpp:1356:    LOGGER << _include.size() << " SNPs have been excluded." << endl;
data.cpp:1361:    LOGGER << "Extracting SNPs " << wind_size/1000 << "kb away from the position [chr=" << chr <<"; bp="<< bp << "] in either direction ..." << endl;
data.cpp:1370:    LOGGER << _include.size() << " SNPs are excludeed." << endl;
data.cpp:1380:    else LOGGER << "The SNP[" + snpname + "] has been excluded from the analysis." << endl;
data.cpp:1396:    if (chr_start != chr_end) LOGGER << _include.size() << " SNPs from chromosome " << chr_start << " to chromosome " << chr_end << " are included in the analysis." << endl;
data.cpp:1397:    else LOGGER << _include.size() << " SNPs on chromosome " << chr_start << " are included in the analysis." << endl;
data.cpp:1404:    LOGGER << "Filtering SNPs with MAF > " << maf << " ..." << endl;
data.cpp:1420:        LOGGER << "After filtering SNPs with MAF > " << maf << ", there are " << _include.size() << " SNPs (" << prev_size - _include.size() << " SNPs with MAF < " << maf << ")." << endl;
data.cpp:1428:    LOGGER << "Filtering SNPs with MAF < " << max_maf << " ..." << endl;
data.cpp:1444:        LOGGER << "After filtering SNPs with MAF < " << max_maf << ", there are " << _include.size() << " SNPs (" << prev_size - _include.size() << " SNPs with MAF > " << max_maf << ")." << endl;
data.cpp:1450:    if (_impRsq.empty()) LOGGER << "Warning: the option --imput-rsq is inactive because GCTA can't find the imputation quality scores for the SNPs. Use the option --update-imput-rsq to input the imputation quality scores." << endl;
data.cpp:1451:    LOGGER << "Filtering SNPs with imputation Rsq > " << rsq_cutoff << " ..." << endl;
data.cpp:1465:        LOGGER << "After filtering for imputation Rsq > " << rsq_cutoff << ", there are " << _include.size() << " SNPs (" << prev_size - _include.size() << " SNPs with imputation Rsq < " << rsq_cutoff << ")." << endl;
data.cpp:1491:    LOGGER << _keep.size() << " individuals are kept from [" + indi_list_file + "]." << endl;
data.cpp:1499:    LOGGER << prev_size - _keep.size() << " individuals are removed from [" + indi_list_file + "] and there are " << _keep.size() << " individuals remaining." << endl;
data.cpp:1507:    LOGGER << "Reading sex information from [" + sex_file + "]." << endl;
data.cpp:1532:    LOGGER << "Sex information for " << icount << " individuals are update from [" + sex_file + "]." << endl;
data.cpp:1540:    LOGGER << "Reading reference alleles of SNPs from [" + ref_A_file + "]." << endl;
data.cpp:1561:    LOGGER << "Reference alleles of " << icount << " SNPs are update from [" + ref_A_file + "]." << endl;
data.cpp:1562:    if (icount != _snp_num) LOGGER << "Warning: reference alleles of " << _snp_num - icount << " SNPs have not been updated." << endl;
data.cpp:1584:    LOGGER << "Calculating allele frequencies ..." << endl;
data.cpp:1650:    LOGGER << "Reading imputation Rsq of the SNPs from [" + zinfofile + "]." << endl;
data.cpp:1670:    LOGGER << "Imputation Rsq of " << icount << " SNPs are update from [" + zinfofile + "]." << endl;
data.cpp:1671:    if (icount != _snp_num) LOGGER << "Warning: imputation Rsq of " << _snp_num - icount << " SNPs have not been updated." << endl;
data.cpp:1681:    LOGGER << "Reading allele frequencies of the SNPs from [" + freq + "]." << endl;
data.cpp:1706:    LOGGER << "Allele frequencies of " << icount << " SNPs are update from [" + freq + "]." << endl;
data.cpp:1707:    if (icount != _snp_num) LOGGER << "Warning: allele frequencies of " << _snp_num - icount << " SNPs have not been updated." << endl;
data.cpp:1716:    LOGGER << "Writing allele frequencies of " << _include.size() << " SNPs to [" + save_freq + "]." << endl;
data.cpp:1723:    LOGGER << "Allele frequencies of " << _include.size() << " SNPs have been saved in the file [" + save_freq + "]." << endl;
data.cpp:1757:    LOGGER << "BLUP solution to the total genetic effects for " << _keep.size() << " individuals have been read from [" + blup_indi_file + "]." << endl;
data.cpp:1764:    LOGGER << "Recoding genotypes (individual major mode) ..." << endl;
data.cpp:1805:    LOGGER << "Recoding genotypes for dominance effects (individual major mode) ..." << endl;
data.cpp:1994:    LOGGER << "Saving the recoded genotype matrix to the file [" + X_zFile + "]." << endl;
data.cpp:2037:    LOGGER << "The recoded genotype matrix has been saved in the file [" + X_zFile + "] (in compressed text format)." << endl;
edata.cpp:20:    LOGGER << "Reading gene expression / methylation data from [" + efile + "] ..." << endl;
edata.cpp:186:    LOGGER << "Recoding gene expression / methylation data ..." << endl;
edata.cpp:196:    LOGGER << "\nCalculating expression relationship matrix (ERM) ... " << endl;
ejma.cpp:70:    LOGGER << "Reading correlation matrix of gene expression from [" + eR_file + "] ..." << endl;
ejma.cpp:91:    LOGGER << "\nReading expression-trait association summary-level statistics from [" + e_metafile + "] ..." << endl;
ejma.cpp:117:    LOGGER << "GWAS summary statistics of " << probe_buf.size() << " probs read from [" + e_metafile + "]." << endl;
ejma.cpp:119:    LOGGER << "Matching the summary data to the genotype data ..." << endl;
ejma.cpp:164:    LOGGER << endl;
ejma.cpp:166:        LOGGER << "Performing stepwise model selection on " << _e_include.size() << " probes to select association signals ... (p cutoff = " << _ecojo_p_cutoff << "; ";
ejma.cpp:167:        LOGGER << "collinearity cutoff = " << _ecojo_collinear << ")"<< endl;
ejma.cpp:170:            LOGGER << "No probe has been selected." << endl;
ejma.cpp:177:            LOGGER << "Performing backward selection on " << _e_include.size() << " probes at threshold p-value = " << _ecojo_p_cutoff << " ..." << endl;
ejma.cpp:184:    LOGGER << "Performing joint analysis on all the " << slct.size();
ejma.cpp:185:    if (joint_only) LOGGER << " probes ..." << endl;
ejma.cpp:186:    else LOGGER << " selected signals ..." << endl;
ejma.cpp:195:    if (joint_only) LOGGER << "Saving the joint analysis result of " << slct.size() << " probes to [" + filename + "] ..." << endl;
ejma.cpp:196:    else LOGGER << "Saving the " << slct.size() << " independent signals to [" + filename + "] ..." << endl;
ejma.cpp:222:    if (_ecojo_p_cutoff > 1e-3) LOGGER << "Performing forward model selection because the significance level is too low..." << endl;
ejma.cpp:230:        if (slct.size() % 5 == 0 && slct.size() > prev_num) LOGGER << slct.size() << " associated probes have been selected." << endl;
ejma.cpp:234:        LOGGER << "Performing backward elimination..." << endl;
ejma.cpp:237:    LOGGER << "Finally, " << slct.size() << " associated probes are selected." << endl;
ejma.cpp:416:    LOGGER << "Recoding gene expression data ..." << endl;
ejma.cpp:429:    LOGGER << "\nPerforming joint analysis on all the " << _e_include.size() << " probes ..." << endl;
ejma.cpp:443:    LOGGER << "Saving the BLUP analysis result of " << _e_include.size() << " probes to [" + filename + "] ..." << endl;
est_hsq.cpp:72:    LOGGER << "Reading phenotypes from [" + phen_file + "]." << endl;
est_hsq.cpp:76:    if (phen_num > 1) LOGGER << "There are " << phen_num << " traits specified in the file [" + phen_file + "]." << endl;
est_hsq.cpp:87:    if (_bivar_reml) LOGGER << "Traits " << mphen << " and " << mphen2 << " are included in the bivariate analysis." << endl;
est_hsq.cpp:89:        if (phen_num > 1) LOGGER << "Trait #" << mphen << " is included for analysis." << endl;
est_hsq.cpp:117:    LOGGER << "Non-missing phenotypes of " << phen_buf.size() << " individuals are included from [" + phen_file + "]." << endl;
est_hsq.cpp:137:    if (qcovar_flag) LOGGER << "Reading quantitative covariates from [" + covar_file + "]." << endl;
est_hsq.cpp:138:    else LOGGER << "Reading discrete covariate(s) from [" + covar_file + "]." << endl;
est_hsq.cpp:140:    if (qcovar_flag) LOGGER << covar_num << " quantitative covariate(s) of " << covar_ID.size() << " individuals read from [" + covar_file + "]." << endl;
est_hsq.cpp:141:    else LOGGER << covar_num << " discrete covariate(s) of " << covar_ID.size() << " individuals are included from [" + covar_file + "]." << endl;
est_hsq.cpp:185:    LOGGER << "Reading " << env << " factor(s) for the analysis of GE interaction from [" + GE_file + "]." << endl;
est_hsq.cpp:188:    LOGGER << GE_num << " " << env << " factor(s) for " << GE_ID.size() << " individuals are included from [" + GE_file + "]." << endl;
est_hsq.cpp:203:    LOGGER << "Reading weights from [" + phen_file + "]." << endl;
est_hsq.cpp:207:    if (phen_num > 1) LOGGER << "There are " << phen_num << " weights specified in the file [" + phen_file + "], however, only the first one used." << endl;
est_hsq.cpp:234:    LOGGER << "Non-missing weights of " << phen_ID.size() << " individuals are included from [" + phen_file + "]." << endl;
est_hsq.cpp:327:    LOGGER << endl;
est_hsq.cpp:331:            if (!mlmassoc && prevalence<-1) LOGGER << "Note: you can specify the disease prevalence by the option --prevalence so that GCTA can transform the variance explained to the underlying liability scale." << endl;
est_hsq.cpp:333:            LOGGER << "Note: you can specify the prevalences of the two diseases by the option --reml-bivar-prevalence so that GCTA can transform the estimates of variance explained to the underlying liability scale." << endl;
est_hsq.cpp:355:            LOGGER << "Mean of diagonal elements of the GRM = " << diag_mean << endl;
est_hsq.cpp:375:        LOGGER << "There are " << grm_files.size() << " GRM file names specified in the file [" + grm_file + "]." << endl;
est_hsq.cpp:377:            LOGGER << "Reading the GRM from the " << i + 1 << "th file ..." << endl;
est_hsq.cpp:394:                LOGGER << "Mean of diagonal elements of the GRM = " << diag_mean << endl;
est_hsq.cpp:509:    LOGGER << _n << " individuals are in common in these files." << endl;
est_hsq.cpp:516:    //LOGGER << "Prepare time: " << LOGGER.tp("main") << std::endl;
est_hsq.cpp:554:        LOGGER << qcovar_num << " quantitative variable(s) included as covariate(s)." << endl;
est_hsq.cpp:567:        LOGGER << covar_num << " discrete variable(s) included as covariate(s)." << endl;
est_hsq.cpp:638:        if (!_bivar_reml) LOGGER  << "Assuming a disease phenotype for a case-control study: ";
est_hsq.cpp:639:        LOGGER << (int) case_num << " cases and " << (int) (n - case_num) << " controls ";
est_hsq.cpp:643:        LOGGER << "Only " << value.size() << " type(s) of phenotype value observed: ";
est_hsq.cpp:645:            LOGGER << value[i] << "\t";
est_hsq.cpp:647:        LOGGER << std::endl;
est_hsq.cpp:743:    LOGGER << "\nPerforming " << (_bivar_reml ? "bivariate" : "") << " REML analysis ... (Note: may take hours depending on sample size)." << endl;
est_hsq.cpp:745:    LOGGER << _n << " observations, " << _X_c << " fixed effect(s), and " << _r_indx.size() << " variance component(s)(including residual variance)." << endl;
est_hsq.cpp:749:    //LOGGER << "REML begin reml iteration" << endl;
est_hsq.cpp:791:    LOGGER << "\nSummary result of REML analysis:" << endl;
est_hsq.cpp:792:    LOGGER << "Source\tVariance\tSE" << std::fixed << LOGGER.setprecision(6) << endl;
est_hsq.cpp:793:    for (i = 0; i < _r_indx.size(); i++) LOGGER << _var_name[i] << "\t" << varcmp[i] << "\t" << sqrt(Hi(i, i)) << endl;
est_hsq.cpp:795:        LOGGER << "Vp_tr1\t" << Vp << "\t" << sqrt(VarVp) << endl;
est_hsq.cpp:796:        LOGGER << "Vp_tr2\t" << Vp2 << "\t" << sqrt(VarVp2) << endl;
est_hsq.cpp:798:            LOGGER << _hsq_name[j] << "\t" << Hsq[_bivar_pos[0][i]] << "\t" << sqrt(VarHsq[_bivar_pos[0][i]]) << endl;
est_hsq.cpp:799:            LOGGER << _hsq_name[j + 1] << "\t" << Hsq[_bivar_pos[1][i]] << "\t" << sqrt(VarHsq[_bivar_pos[1][i]]) << endl;
est_hsq.cpp:802:        LOGGER << "Vp\t" << Vp << "\t" << sqrt(VarVp) << endl;
est_hsq.cpp:803:        for (i = 0; i < Hsq.size(); i++) LOGGER << _hsq_name[i] << "\t" << Hsq[i] << "\t" << sqrt(VarHsq[i]) << endl;
est_hsq.cpp:804:        if (_r_indx.size() > 2) LOGGER << "\nSum of V(G)/Vp\t" << sum_hsq << "\t" << sqrt(var_sum_hsq) << endl;
est_hsq.cpp:807:        LOGGER << "The estimate of variance explained on the observed scale is transformed to that on the underlying scale:" << endl;
est_hsq.cpp:809:            if (_flag_CC) LOGGER << "Proportion of cases in the sample = " << _ncase << " for trait #1; User-specified disease prevalence = " << prevalence << " for trait #1" << endl;
est_hsq.cpp:810:            if (_flag_CC2) LOGGER << "Proportion of cases in the sample = " << _ncase2 << " for trait #2; User-specified disease prevalence = " << prevalence2 << " for trait #2" << endl;
est_hsq.cpp:812:                if (_flag_CC) LOGGER << _hsq_name[j] << "_L\t" << transform_hsq_L(_ncase, prevalence, Hsq[_bivar_pos[0][i]]) << "\t" << transform_hsq_L(_ncase, prevalence, sqrt(VarHsq[_bivar_pos[0][i]])) << endl;
est_hsq.cpp:813:                if (_flag_CC2) LOGGER << _hsq_name[j + 1] << "_L\t" << transform_hsq_L(_ncase2, prevalence2, Hsq[_bivar_pos[1][i]]) << "\t" << transform_hsq_L(_ncase2, prevalence2, sqrt(VarHsq[_bivar_pos[1][i]])) << endl;
est_hsq.cpp:816:            LOGGER << "(Proportion of cases in the sample = " << _ncase << "; User-specified disease prevalence = " << prevalence << ")" << endl;
est_hsq.cpp:817:            for (i = 0; i < Hsq.size(); i++) LOGGER << _hsq_name[i] << "_L\t" << transform_hsq_L(_ncase, prevalence, Hsq[i]) << "\t" << transform_hsq_L(_ncase, prevalence, sqrt(VarHsq[i])) << endl;
est_hsq.cpp:818:            if (_r_indx.size() > 2)  LOGGER << "\nSum of V(G)_L/Vp\t" << transform_hsq_L(_ncase, prevalence, sum_hsq) << "\t" << transform_hsq_L(_ncase, prevalence, sqrt(var_sum_hsq)) << endl;
est_hsq.cpp:827:            LOGGER << rg_name[i] << "\t" << rg[i] << "\t" << sqrt(rg_var[i]) << endl;
est_hsq.cpp:831:        LOGGER << "\nSampling variance/covariance of the estimates of variance components:" << endl;
est_hsq.cpp:833:            //for (j = 0; j < _r_indx.size(); j++) LOGGER << setiosflags(ios::scientific) << Hi(i, j) << "\t";
est_hsq.cpp:834:            for (j = 0; j < _r_indx.size(); j++) LOGGER << std::scientific << Hi(i, j) << "\t";
est_hsq.cpp:835:            LOGGER << endl;
est_hsq.cpp:839:        LOGGER << "Estimate" << (_X_c > 1 ? "s" : "") << "of fixed effect" << (_X_c > 1 ? "s" : "") << ":" << endl;
est_hsq.cpp:840:        LOGGER << "\nSource\tEstimate\tSE" << endl;
est_hsq.cpp:842:            if (i == 0) LOGGER << "mean\t";
est_hsq.cpp:843:            else LOGGER << "X_" << i + 1 << "\t";
est_hsq.cpp:844:            LOGGER << std::fixed << _b[i] << "\t" << sqrt(Xt_Vi_X_i(i, i)) << endl;
est_hsq.cpp:906:    LOGGER << "\nSummary result of REML analysis has been saved in the file [" + reml_rst_file + "]." << endl;
est_hsq.cpp:917:        LOGGER << "\nBLUP solutions of the genetic effects for " << _keep.size() << " individuals has been saved in the file [" + rand_eff_file + "]." << endl;
est_hsq.cpp:977:        LOGGER << "\ncvBLUP solutions of the genetic effects for " << _keep.size() << " individuals has been saved in the file [" + rand_eff_file + "]." << endl;
est_hsq.cpp:1036:    LOGGER << "\nCalculating the logLikelihood for the reduced model ...\n(variance component" << (multi_comp ? "s " : " ");
est_hsq.cpp:1038:        if (find(_r_indx_drop.begin(), _r_indx_drop.end(), _r_indx[i]) == _r_indx_drop.end()) LOGGER << _r_indx[i] + 1 << " ";
est_hsq.cpp:1040:    LOGGER << (multi_comp ? "are" : "is") << " dropped from the model)" << endl;
est_hsq.cpp:1073:                if(_reml_fixed_var) LOGGER << "Variance components are fixed at: " << varcmp.transpose() << endl;
est_hsq.cpp:1074:                else LOGGER << "Prior values of variance components: " << varcmp.transpose() << endl;
est_hsq.cpp:1078:                LOGGER << "Calculating prior values of variance components by EM-REML ..." << endl;
est_hsq.cpp:1083:            LOGGER << "Running " << mtd_str[_reml_mtd] << " algorithm ..." << "\nIter.\tlogL\t";
est_hsq.cpp:1084:            for (i = 0; i < _r_indx.size(); i++) LOGGER << _var_name[_r_indx[i]] << "\t";
est_hsq.cpp:1085:            LOGGER << endl;
est_hsq.cpp:1087:        //LOGGER << "Iter " << iter << endl;
est_hsq.cpp:1103:        //LOGGER << "calcu_vi_bivar returned" << endl;
est_hsq.cpp:1136:            LOGGER << iter << "\t" << std::fixed << LOGGER.setprecision(2) << lgL << "\t";
est_hsq.cpp:1137:            for (i = 0; i < _r_indx.size(); i++) LOGGER << LOGGER.setprecision(5) << varcmp[i] << "\t";
est_hsq.cpp:1138:            //LOGGER << time_vi << "\t" << time_p << "\t" << time_reml << "\t";
est_hsq.cpp:1139:            if (constrain_num > 0) LOGGER << "(" << constrain_num << " component(s) constrained)" << endl;
est_hsq.cpp:1140:            else LOGGER << endl;
est_hsq.cpp:1142:            if (!prior_var_flag) LOGGER << "Updated prior values: " << varcmp.transpose() << endl;
est_hsq.cpp:1143:            LOGGER << "logL: " << lgL << endl;
est_hsq.cpp:1182:    if(_reml_fixed_var) LOGGER << "Warning: the model is evaluated at fixed variance components. The likelihood might not be maximised." <<endl;
est_hsq.cpp:1184:        if(converged_flag) LOGGER << "Log-likelihood ratio converged." << endl;
est_hsq.cpp:1186:            if(_reml_force_converge || _reml_no_converge) LOGGER << "Warning: Log-likelihood not converged. Results are not reliable." <<endl;
est_hsq.cpp:1315:                    LOGGER << "Still can't be inversed. Try --reml-alg-inv 2 " << endl;
est_hsq.cpp:1319:                LOGGER << "Switching to the \"bending\" approach to invert V. This method hasn't been tested. The results might not be reliable!" << endl;
est_hsq.cpp:1339:                    LOGGER << "Still can't inverse. Try --reml-alg-inv 2 " << endl;
est_hsq.cpp:1344:                LOGGER << "Switching to the \"bending\" approach to invert V. This method hasn't been tested. The results might not be reliable!" << endl;
est_hsq.cpp:1348:                LOGGER << "Try --reml-alg-inv 1 for diagonal addition value or --reml-alg-inv 2 for bending Vi" << endl;
est_hsq.cpp:1361:                    LOGGER << "\nSwitching to the \"bending\" approach to invert V. This method hasn't been tested. The results might not be reliable!" << endl;
est_hsq.cpp:1377:                LOGGER << "Switching from Cholesky to LU decomposition approach. The results might not be reliable!" << endl;
est_hsq.cpp:1414:    LOGGER << "Bending the GRM(s) to be positive-definite (may take a while if there are multiple GRMs)..." << endl;
est_hsq.cpp:1425:            LOGGER << "Bending the " << i + 1 << "th GRM completed." << endl;
est_hsq.cpp:1529:    //LOGGER << "Before calcu_Hi: " << getVMemKB() << " " << getMemKB() << ", "; 
est_hsq.cpp:1560:            LOGGER << "Warning: the information matrix is not invertible." << endl;
est_hsq.cpp:1598:    //LOGGER << "AI reml 1 start" << endl;
est_hsq.cpp:1605:    //LOGGER << "AI reml 2 start" << endl;
est_hsq.cpp:1615:    //LOGGER << "AI reml 2 end" << endl;
est_hsq.cpp:1626:            LOGGER << "Warning: the information matrix is not invertible." << endl;
est_hsq.cpp:1644:    //LOGGER << "Before em_reml: " << getVMemKB() << " " << getMemKB() << ", "; 
est_hsq.cpp:1647:    //LOGGER << "calcu_tr_PA returned" << endl;
est_hsq.cpp:1654:        //LOGGER << "EM reml " << i << endl;
est_hsq.cpp:1671:    //LOGGER << "Before calcu_tr_PA: " << getVMemKB() << " " << getMemKB() << ", "; 
est_hsq.cpp:1678:        //LOGGER << "calcu_tr_PA " << i << endl;
est_hsq.cpp:1681:            //LOGGER << "   matrix product finished" << endl;
est_hsq.cpp:1695:            //LOGGER << "diag sum finished" << endl;
est_hsq.cpp:1726:    LOGGER << "Calculating the BLUP solutions to SNP effects ..." << endl;
est_hsq.cpp:1764:    LOGGER << "Calculating the BLUP solutions to SNP effects using imputed dosage scores ... " << endl;
est_hsq.cpp:1787:    LOGGER << "Writing BLUP solutions of SNP effects for " << _include.size() << " SNPs to [" + o_b_snp_file + "]." << endl;
est_hsq.cpp:1794:    LOGGER << "BLUP solutions of SNP effects for " << _include.size() << " SNPs have been saved in the file [" + o_b_snp_file + "]." << endl;
est_hsq.cpp:1855:    LOGGER << _n << " individuals are in common in these files." << endl;
est_hsq.cpp:1865:    LOGGER << "\nPerforming Haseman-Elston regression ...\n" << endl;
est_hsq.cpp:1868:    LOGGER << "Standardising the phenotype ..." << endl;
est_hsq.cpp:1915:    LOGGER << "Constructing ordinary least squares equations ..." << endl;
est_hsq.cpp:1983:    LOGGER << "\nLeft-hand side of OLS equations (X'X)\n" << Lhs  << endl << endl;
est_hsq.cpp:1984:    //LOGGER << "vare_cp " << vare_cp << endl;
est_hsq.cpp:1985:    //LOGGER << "vare_sd " << vare_sd << endl << endl;
est_hsq.cpp:2090:    LOGGER << ss.str() << endl;
est_hsq.cpp:2095:    LOGGER << "Results from Haseman-Elston regression have been saved in [" + ofile + "]." << endl;
est_hsq.cpp:2160:    LOGGER << _n << " individuals are in common in these files." << endl;
est_hsq.cpp:2183:            //LOGGER << i << " " << idx << " " << phen_buf[idx][mphen] << " " << atof(phen_buf[idx][mphen].c_str()) << endl;
est_hsq.cpp:2194:    LOGGER << y1.size() << " non-missing phenotypes for trait #1 and " << y2.size() << " for trait #2" << endl;
est_hsq.cpp:2206:    LOGGER << "\nPerforming Haseman-Elston regression ...\n" << endl;
est_hsq.cpp:2209:    LOGGER << "Standardising the phenotype ..." << endl;
est_hsq.cpp:2289:    LOGGER << "Constructing ordinary least squares equations ..." << endl;
est_hsq.cpp:2436:    LOGGER << "\n length of covariates:" << endl;
est_hsq.cpp:2437:    LOGGER << "\t trait1:  " << count[0] << endl;
est_hsq.cpp:2438:    LOGGER << "\t trait2:  " << count[1] << endl;
est_hsq.cpp:2439:    LOGGER << "\t trait12: " << count[2] << endl;
est_hsq.cpp:2453:    LOGGER << "\nLeft-hand side of OLS equations (X'X)\n" << LhsAll  << endl << endl;
est_hsq.cpp:2555:    LOGGER << "\nJackknife sampling variance/covariance of the estimates of heritabilities:" << endl;
est_hsq.cpp:2567:    LOGGER << varcov << endl << endl;
est_hsq.cpp:2608:    LOGGER << ss.str() << endl;
est_hsq.cpp:2613:    LOGGER << "Results from Haseman-Elston regression have been saved in [" + ofile + "]." << endl;
est_hsq.cpp:2647:    LOGGER << "\nPerforming Haseman-Elston regression ...\n" << endl;
est_hsq.cpp:2661:    LOGGER << "Standardising the phenotype ..." << endl; 
est_hsq.cpp:2688:    LOGGER << ss.str() << endl;
est_hsq.cpp:2693:    LOGGER << "Results from Haseman-Elston regression have been saved in [" + ofile + "]." << endl;
gbat.cpp:19:    LOGGER << "\nReading SNP association results from [" + snpAssoc_file + "]." << endl;
gbat.cpp:23:    LOGGER << "Reading association p-values from [" << snpAssoc_file << "]." << endl;
gbat.cpp:32:    LOGGER << "Association p-values of " << snp_name.size() << " SNPs have been included." << endl;
gbat.cpp:65:    LOGGER << "Reading physical positions of the genes from [" + gAnno_file + "]." << endl;
gbat.cpp:76:    LOGGER << "Physical positions of " << gene_name.size() << " genes have been include." << endl;
gbat.cpp:133:    LOGGER << "Mapping the physical positions of genes to SNP data (gene bounaries: " << wind / 1000 << "Kb away from UTRs) ..." << endl;
gbat.cpp:175:    else LOGGER << mapped << " genes have been mapped to SNP data." << endl;
gbat.cpp:191:    LOGGER << "\nRunning gene-based association test (GBAT)..." << endl;
gbat.cpp:222:        if((i + 1) % 100 == 0 || (i + 1) == gene_num) LOGGER << i + 1 << " of " << gene_num << " genes.\r";
gbat.cpp:226:    LOGGER << "\nSaving the results of the gene-based association analysese to [" + filename + "] ..." << endl;
gbat.cpp:244:    LOGGER << "here simulation start." << endl;
gbat.cpp:270:    LOGGER << "here find start." << endl;
gbat.cpp:276:    LOGGER << "here find end." << endl;
grm.cpp:63:    if (!mlmassoc) LOGGER << "\nCalculating the" << ((grm_d_flag) ? " dominance" : "") << " genetic relationship matrix (GRM)" << (grm_xchr_flag ? " for the X chromosome" : "") << (_dosage_flag ? " using imputed dosage data" : "") << " ... (Note: default speed-optimized mode, may use huge RAM)" << endl;
grm.cpp:64:    else LOGGER << "\nCalculating the genetic relationship matrix (GRM) ... " << endl;
grm.cpp:206:        LOGGER << "GRM of " << _keep.size() << " individuals has been saved in the file [" + grm_file + "] (in binary format)." << endl;
grm.cpp:220:        LOGGER << "Number of SNPs to calcuate the genetic relationship between each pair of individuals has been saved in the file [" + grm_N_file + "] (in binary format)." << endl;
grm.cpp:228:        LOGGER << "Saving the genetic relationship matrix to the file [" + grm_file + "] (in compressed text format)." << endl;
grm.cpp:242:        LOGGER << "The genetic relationship matrix has been saved in the file [" + grm_file + "] (in compressed text format)." << endl;
grm.cpp:250:    LOGGER << "IDs for the GRM file [" + grm_file + "] have been saved in the file [" + famfile + "]." << endl;
grm.cpp:257:    if (out_id_log) LOGGER << "Reading IDs of the GRM from [" + grm_id_file + "]." << endl;
grm.cpp:276:    if (out_id_log) LOGGER << n << " IDs read from [" + grm_id_file + "]." << endl;
grm.cpp:310:    LOGGER << "Reading the GRM from [" + grm_gzfile + "]." << endl;
grm.cpp:322:        if (grm_N_buf == 0) LOGGER << "Warning: " << buf << endl;
grm.cpp:335:    LOGGER << "GRM for " << n << " individuals are included from [" + grm_gzfile + "]." << endl;
grm.cpp:348:    LOGGER << "Reading the GRM from [" + grm_binfile + "]." << endl;
grm.cpp:364:        LOGGER << "Reading the number of SNPs for the GRM from [" + grm_Nfile + "]." << endl;
grm.cpp:376:    LOGGER << "GRM for " << n << " individuals are included from [" + grm_binfile + "]." << endl;
grm.cpp:380:    LOGGER << "Pruning the GRM with a cutoff of " << grm_cutoff << " ..." << endl;
grm.cpp:426:    LOGGER << "After pruning the GRM, there are " << _keep.size() << " individuals (" << removed_ID.size() << " individuals removed)." << endl;
grm.cpp:430:    LOGGER << "Adjusting the GRM for sampling errors ..." << endl;
grm.cpp:459:    LOGGER << "Parameterizing the GRM under the assumption of ";
grm.cpp:460:    if (dosage_compen == 1) LOGGER << "full dosage compensation ..." << endl;
grm.cpp:461:    else if (dosage_compen == 0) LOGGER << "no dosage compensation ..." << endl;
grm.cpp:532:    else LOGGER << _n << " individuals in common in the GRM files." << endl;
grm.cpp:538:        LOGGER << "Reading the GRM from the " << f + 1 << "th file ..." << endl;
grm.cpp:562:    LOGGER << "\n" << grm_files.size() << " GRMs have been merged together." << endl;
grm.cpp:578:    else LOGGER << _n << " individuals in common in the GRM files." << endl;
grm.cpp:586:        LOGGER << "Reading the GRM from the " << f + 1 << "th file ..." << endl;
grm.cpp:618:    LOGGER << "\n" << grm_files.size() << " GRMs have been aligned." << endl;
grm.cpp:633:    if (out_log) LOGGER << "There are " << grm_files.size() << " GRM file names specified in [" + merge_grm_file + "]." << endl;
grm.cpp:659:    LOGGER << "\nThe off-diagonals that are < " << threshold << " are set to zero.\n" << endl;
grm.cpp:674:    LOGGER << "\nPerforming principal component analysis ..." << endl;
grm.cpp:685:    LOGGER << "Eigenvalues of " << n << " individuals have been saved in [" + eval_file + "]." << endl;
grm.cpp:696:    LOGGER << "The first " << out_pc_num << " eigenvectors of " << n << " individuals have been saved in [" + evec_file + "]." << endl;
grm.cpp:709:    LOGGER << "Reading eigenvectors from [" + eigenvec_file + "]." << endl;
grm.cpp:713:    LOGGER << eigenvec_num << " eigenvectors of " << eigenvec_ID.size() << " individuals are included from [" + eigenvec_file + "]." << endl;
grm.cpp:716:    LOGGER << "\nReading eigenvalues from [" + eigenval_file + "]." << endl;
grm.cpp:727:    LOGGER << eigenval_num << " eigenvalues read from [" + eigenval_file + "]" << endl;  
grm.cpp:740:    LOGGER << _n << " individuals in common between the input files are included in the analysis."<<endl;
grm.cpp:754:    LOGGER << "\nCalculating SNP loading ..." << endl;
grm.cpp:764:    LOGGER << "\nSaving the PC loading of " << m << " SNPs to [" + filename + "] ..." << endl;
grm.cpp:793:    //LOGGER << "\nOpen the projected file for write [" << out_filename << "]."<< endl;
grm.cpp:797:    LOGGER << "Reading SNP loading from [" + f_pc_load + "]." << endl;
grm.cpp:803:    LOGGER << "Number of PC loading: " << N_loading_file << endl;
grm.cpp:813:    LOGGER << "Number of SNPs in loading array: " << num_snp << "." << endl; 
grm.cpp:849:    LOGGER << "Matching Alleles..." << endl;
grm.cpp:859:    LOGGER << "Adjusting A1" << endl;
grm.cpp:885:    LOGGER << " " << m_snp_loading.rows() << " SNPs are included for loading" << endl;
grm.cpp:890:        LOGGER << " See [" << miss_file << "] for more details, if plenty of SNPs missed, the projection might be biased." << endl;
grm.cpp:899:    LOGGER << "Standardize genotypes and project PCs..." << endl;
grm.cpp:900:    LOGGER << "Total number of subjects: " << _keep.size() << "\n" << endl;
grm.cpp:902:    LOGGER << "Processing subject number: " << endl;
grm.cpp:906:        LOGGER <<  to_string(ind_index+1) + "\r" << flush;
grm.cpp:942:    LOGGER << "\nFinished, and the PCs have all been saved to " << out_filename << endl;
gwas_simu.cpp:26:    LOGGER << "Reading a list of SNPs (as causal variants) from [" + qtl_file + "]." << endl;
gwas_simu.cpp:55:    LOGGER << qtl_pos.size() << " SNPs (as causal variants) to be included from [" + qtl_file + "]." << endl;
gwas_simu.cpp:68:    LOGGER << "Simulated QTL effect(s) have been saved in [" + out_parfile + "]." << endl;
gwas_simu.cpp:91:    LOGGER << "Simulation parameters:" << endl;
gwas_simu.cpp:92:    LOGGER << "Number of simulation replicate(s) = " << simu_num << " (Default = 1)" << endl;
gwas_simu.cpp:93:    LOGGER << "Heritability " << (cc_flag ? "of liability = " : " = ") << hsq << " (Default = 0.1)" << endl;
gwas_simu.cpp:95:        LOGGER << "Disease prevalence = " << K << " (Default = 0.1)" << endl;
gwas_simu.cpp:96:        LOGGER << "Number of cases = " << case_num << endl;
gwas_simu.cpp:97:        LOGGER << "Number of controls = " << control_num << endl;
gwas_simu.cpp:99:    LOGGER << endl;
gwas_simu.cpp:118:        if (qtl_num - num_gener_qtl_eff > 0) LOGGER << qtl_num - num_gener_qtl_eff << " user-specified QTL effects." << endl;
gwas_simu.cpp:119:        if (num_gener_qtl_eff > 0) LOGGER << num_gener_qtl_eff << " unspecified QTL effects are generated from standard normal distribution." << endl;
gwas_simu.cpp:164:    LOGGER << "Simulating GWAS based on the real genotyped data with " << simu_num << " replicate(s) ..." << endl;
gwas_simu.cpp:198:        if (cc_flag) LOGGER << "Simulated " << case_num_buf << " cases and " << control_num << " controls have been saved in [" + _out + ".phen" + "]." << endl;
gwas_simu.cpp:199:        else LOGGER << "Simulated phenotypes of " << _keep.size() << " individuals have been saved in [" + _out + ".phen" + "]." << endl;
gwas_simu.cpp:206:        LOGGER << "Saving the simulated data to the file [" + out_rstfile + "] (in emBayesB format)." << endl;
gwas_simu.cpp:217:        LOGGER << "Simulated data (" << _keep.size() << " individuals and " << _include.size() << " SNPs) has been saved in [" + out_rstfile + "]." << endl;
gwas_simu.cpp:560:    LOGGER << "Genetic distances have been created, and been saved in [" + out_bimfile + "]." << endl;
joint_meta.cpp:20:    LOGGER << "\nReading GWAS summary-level statistics from [" + metafile + "] ..." << endl;
joint_meta.cpp:88:    LOGGER << "GWAS summary statistics of " << count << " SNPs read from [" + metafile + "]." << endl;
joint_meta.cpp:90:    LOGGER << "Phenotypic variance estimated from summary statistics of all " << count << " SNPs: " << _jma_Vp << " (variance of logit for case-control studies)." << endl;
joint_meta.cpp:94:            LOGGER << "User specified genomic inflation factor: " << _GC_val << endl;
joint_meta.cpp:97:            LOGGER << "Genomic inflation factor calcualted from " << count << " SNPs: " << _GC_val << endl;
joint_meta.cpp:99:        LOGGER << "p-values wil be adjusted by the genomic control approach." << endl;
joint_meta.cpp:102:    LOGGER << "Matching the GWAS meta-analysis results to the genotype data ..." << endl;
joint_meta.cpp:146:        LOGGER << "Warning: can't match the reference alleles or of " << bad_snp.size() << " SNPs to those in the genotype data. These SNPs have been saved in [" + badsnpfile + "]." << endl;
joint_meta.cpp:154:        LOGGER << bad_snp_freq.size() << " SNP(s) have large difference of allele frequency among the GWAS summary data and the reference sample. These SNPs have been saved in [" << badsnpfile << "]." << endl; 
joint_meta.cpp:158:    else LOGGER << _include.size() << " SNPs are matched to the genotype data." << endl;
joint_meta.cpp:187:    LOGGER << "Calculating the variance of SNP genotypes ..." << endl;
joint_meta.cpp:220:    if (pgiven.size() > 0) LOGGER << pgiven.size() << " of them are matched to the genotype and summary data." << endl;
joint_meta.cpp:236:        LOGGER << "The threshold p-value has been set to 0.5 because of the --cojo-top-SNPs option." << endl;
joint_meta.cpp:241:    LOGGER << endl;
joint_meta.cpp:243:        LOGGER << "Performing "<< ((mld_slct_alg==0)?"stepwise":"forward") << " model selection on " << _include.size() << " SNPs to select association signals ... (p cutoff = " << _jma_p_cutoff << "; ";
joint_meta.cpp:244:        LOGGER << "collinearity cutoff = " << _jma_collinear << ")"<< endl;
joint_meta.cpp:245:        if (!_jma_actual_geno) LOGGER << "(Assuming complete linkage equilibrium between SNPs which are more than " << _jma_wind_size / 1e6 << "Mb away from each other)" << endl;
joint_meta.cpp:248:            LOGGER << "No SNPs have been selected." << endl;
joint_meta.cpp:254:            LOGGER << "Performing backward selection on " << _include.size() << " SNPs at threshold p-value = " << _jma_p_cutoff << " ..." << endl;
joint_meta.cpp:261:    LOGGER << "Performing joint analysis on all the " << slct.size();
joint_meta.cpp:262:    if (joint_only) LOGGER << " SNPs ..." << endl;
joint_meta.cpp:263:    else LOGGER << " selected signals ..." << endl;
joint_meta.cpp:268:    if (_jma_actual_geno) LOGGER << "Residual varaince = " << _jma_Ve << endl;
joint_meta.cpp:274:        LOGGER << "(" << _jma_snpnum_backward << " SNPs eliminated by backward selection and " << _jma_snpnum_collienar << " SNPs filtered by collinearity test are not included in the output)" << endl;
joint_meta.cpp:287:    LOGGER << "Performing single-SNP association analysis conditional on the " << pgiven.size() << " given SNPs ... ";
joint_meta.cpp:288:    LOGGER << "(collinearity cutoff = " << _jma_collinear << ")" << endl;
joint_meta.cpp:289:    if (!_jma_actual_geno) LOGGER << "(Assuming complete linkage equilibrium between SNPs which are more than " << _jma_wind_size / 1e6 << "Mb away from each other)" << endl;
joint_meta.cpp:310:    if (joint_only) LOGGER << "Saving the joint analysis result of " << slct.size() << " SNPs to [" + filename + "] ..." << endl;
joint_meta.cpp:311:    else LOGGER << "Saving the " << slct.size() << " independent signals to [" + filename + "] ..." << endl;
joint_meta.cpp:327:    if (joint_only) LOGGER << "Saving the LD structure of " << slct.size() << " SNPs to [" + filename + "] ..." << endl;
joint_meta.cpp:328:    else LOGGER << "Saving the LD structure of " << slct.size() << " independent signals to [" + filename + "] ..." << endl;
joint_meta.cpp:351:    LOGGER << "Saving the conditional analysis results of " << remain.size() << " remaining SNPs to [" + filename + "] ..." << endl;
joint_meta.cpp:366:        LOGGER << "Restrict output thresh to " << out_thresh << "." << endl;
joint_meta.cpp:393:        LOGGER << "Switched to perform a forward model selection because the significance level is too low..." << endl;
joint_meta.cpp:401:        if (slct.size() % 5 == 0 && slct.size() > prev_num) LOGGER << slct.size() << " associated SNPs have been selected." << endl;
joint_meta.cpp:406:        LOGGER << "Performing backward elimination..." << endl;
joint_meta.cpp:409:    LOGGER << "Finally, " << slct.size() << " associated SNPs are selected." << endl;
joint_meta.cpp:521:    //LOGGER << "Cutoff of bC_se " << cutoff << endl;
joint_meta.cpp:795:    LOGGER << "\nPerforming joint analysis on all the " << _include.size() << " SNPs ..." << endl;
joint_meta.cpp:796:    LOGGER << "(Assuming complete linkage equilibrium between SNPs which are more than " << _jma_wind_size / 1e6 << "Mb away from each other)" << endl;
joint_meta.cpp:799:        LOGGER << "Saving the joint analysis result of " << _include.size() << " SNPs to [" + filename + "] ..." << endl;
joint_meta.cpp:839:    LOGGER << "Calculating the LD correlation matrix of all the " << _include.size() << " SNPs..." << endl;
joint_meta.cpp:876:        if((i + 1) % 1000 == 0 || (i + 1) == _include.size()) LOGGER << i + 1 << " of " << _include.size() << " SNPs.\r";
joint_meta.cpp:880:    LOGGER << "Estimating the joint effects of all SNPs ..." << endl;
ld.cpp:38:    else LOGGER << prev_target_snp_num << " target SNPs read from [" + snplistfile + "], " << _ld_target_snp.size() << " of which exist in the data." << endl;
ld.cpp:57:    LOGGER << "Estimating LD structure..." << endl;
ld.cpp:89:    LOGGER << "Results have been saved in [" + _out + ".rsq.ld]" + ", [" + _out + ".r.ld]" + " and [" + _out + ".snp.ld].\n" << endl;
ld.cpp:98:    LOGGER << "Parameters used to search SNPs in LD with the given SNPs: window size=" << (int) (wind_size * 0.001) << "Kb, significant level=" << alpha << endl;
ld.cpp:168:        LOGGER << i + 1 << " of " << smpl.size() << " target SNPs.\r";
ld.cpp:280:    LOGGER << "\nCalculating LD score for SNPs (block size of " << wind_size / 1000 << "Kb with an overlap of "<<wind_size/2000<<"Kb between blocks); LD rsq threshold = " << rsq_cutoff << ") ... " << endl;
ld.cpp:282:    if(_ldscore_adj) LOGGER << "LD rsq will be adjusted for chance correlation, i.e. rsq_adj = rsq - (1 - rsq) / (n -2)." << endl;
ld.cpp:304:    LOGGER << "LD score for " << m << " SNPs have been saved in the file [" + mrsq_file + "]." << endl;
ld.cpp:518:    LOGGER << "There are " << set_num << " filenames specified in [" + snpset_filenames_file + "]." << endl;
ld.cpp:525:        LOGGER << "Reading the list of SNPs from [" + snpset_filenaems[i] + "]." << endl;
ld.cpp:549:        LOGGER << snp_count << " SNPs included from [" << snpset_filenaems[i] << "]. " <<endl;
ld.cpp:552:    LOGGER << "\nCalculating multi-component LD score for SNPs (block size of " << wind_size / 1000 << "Kb with an overlap of "<<wind_size/2000<<"Kb between blocks); LD rsq threshold = " << rsq_cutoff << ") ... " << endl;
ld.cpp:554:    if(_ldscore_adj) LOGGER << "LD rsq will be adjusted for chance correlation, i.e. rsq_adj = rsq - (1 - rsq) / (n -2)." << endl;
ld.cpp:587:    LOGGER << "LD score for " << m << " SNPs have been saved in the file [" + mrsq_file + "]." << endl;
ld.cpp:755:        LOGGER << "Reading per-SNP LD score from [" + i_ld_file + "] ..." << endl;
ld.cpp:789:        LOGGER << "Per-SNP LD score for " << m << " SNPs read from [" + i_ld_file + "]." << endl;
ld.cpp:797:        LOGGER << "\nCalculating LD score between SNPs (block size of " << wind_size / 1000 << "Kb with an overlap of "<<wind_size / 2000<<"Kb between blocks); LD rsq threshold = " << rsq_cutoff << ") ... " << endl;
ld.cpp:815:    LOGGER << "Calculating regional mean LD score (region width =  " << seg_size / 1000 << "Kb with an overlap of " << seg_size / 2000 << "Kb between regions) ... " << endl;
ld.cpp:850:    LOGGER << "Writing the regional LD score to file ["+ lds_file +"] ..." << endl;
ld.cpp:912:    LOGGER << "Calculating maximum LD rsq between SNPs (block size of " << wind_size / 1000 << "Kb with an overlap of "<<wind_size/2000<<"Kb between blocks; LD rsq threshold = " << rsq_cutoff << ") ... " << endl;
ld.cpp:913:    LOGGER << "(Maximum number of SNPs allowed in a block = " << max_size << " due to computational limitation)" << endl;
ld.cpp:934:    LOGGER << "Maximum LD rsq for " << m << " SNPs have been saved in the file [" + max_rsq_file + "]." << endl;    
ld.cpp:1032:        LOGGER << "size = " << size << "; eff_m = " << eff_m << endl;
ld.cpp:1050:        LOGGER << "size = " << size << "; eff_m = " << eff_m << endl;
mkl.cpp:22:    LOGGER << "Recoding genotypes (individual major mode) ..." << endl;
mkl.cpp:193:    if (!mlmassoc) LOGGER << "\nCalculating the" << ((grm_d_flag) ? " dominance" : "") << " genetic relationship matrix (GRM)" << (grm_xchr_flag ? " for the X chromosome" : "") << (_dosage_flag ? " using imputed dosage data" : "") << " ... (Note: default speed-optimized mode, may use huge RAM)" << endl;
mkl.cpp:194:    else LOGGER << "\nCalculating the genetic relationship matrix (GRM) ... " << endl;
mkl.cpp:309:        LOGGER << "GRM of " << n << " individuals has been saved in the file [" + grm_file + "] (in binary format)." << endl;
mkl.cpp:319:        LOGGER << "Number of SNPs to calcuate the genetic relationship between each pair of individuals has been saved in the file [" + grm_N_file + "] (in binary format)." << endl;
mkl.cpp:326:        LOGGER << "Saving the genetic relationship matrix to the file [" + grm_file + "] (in compressed text format)." << endl;
mkl.cpp:333:        LOGGER << "The genetic relationship matrix has been saved in the file [" + grm_file + "] (in compressed text format)." << endl;
mkl.cpp:341:    LOGGER << "IDs for the GRM file [" + grm_file + "] have been saved in the file [" + famfile + "]." << endl;
mkl.cpp:349:    //LOGGER << "LDLT" << endl;
mkl.cpp:360:    //LOGGER << "Finished copy" << endl;
mkl.cpp:370:    //LOGGER << "Finished decompose" << endl;
mkl.cpp:384:        //LOGGER << "start inverse" << endl;
mkl.cpp:391:        //LOGGER << "Inverse finished" << endl;
mkl.cpp:403:            //LOGGER << "IDLT finished" << endl;
mkl.cpp:554:    LOGGER << "\nPruning SNPs for LD ..." << endl;
mkl.cpp:570:    LOGGER << "After LD-pruning, " << m << " SNPs are remaining." << endl;
mkl.cpp:575:    LOGGER << "The list of " << m << " LD-pruned SNPs (pruned in) have been saved in the file [" + pruned_file + "]." << endl;
mkl.cpp:623:    LOGGER << "Calculating mean and maximum LD rsq (window size = at least " << wind_size / 1000 << "Kb in either direction; LD rsq threshold = " << rsq_cutoff << ") ... " << endl;
mkl.cpp:637:    LOGGER << "Mean and maximum LD rsq for " << m << " SNPs have been saved in the file [" + mrsq_file + "]." << endl;
mlm_assoc.cpp:105:        LOGGER << "\nReading the primary GRM from [" << grm_files[1] << "] ..." << endl;
mlm_assoc.cpp:125:        LOGGER << "\nReading the secondary GRM from [" << grm_files[0] << "] ..." << endl;
mlm_assoc.cpp:152:            LOGGER << "There are " << grm_files.size() << " GRM file names specified in the file [" + grm_file + "]." << endl;
mlm_assoc.cpp:154:                LOGGER << "Reading the GRM from the " << i + 1 << "th file ..." << endl;
mlm_assoc.cpp:198:    LOGGER << "\nPerforming MLM association analyses" << (subtract_grm_flag?"":" (including the candidate SNP)") << " ..."<<endl;
option.cpp:28:    LOGGER << "*******************************************************************" << endl;
option.cpp:29:    LOGGER << "* Genome-wide Complex Trait Analysis (GCTA)" << endl;
option.cpp:30:    LOGGER << "* version 1.30 beta2" << endl;
option.cpp:31:    LOGGER << "* (C) 2010-2017, The University of Queensland" << endl;
option.cpp:32:    LOGGER << "* MIT License" << endl;
option.cpp:33:    LOGGER << "* Please report bugs to: Jian Yang <jian.yang@uq.edu.au>" << endl;
option.cpp:34:    LOGGER << "*******************************************************************" << endl;
option.cpp:38:    LOGGER << "Analysis started: " << ctime(&curr) << endl;
option.cpp:39:    LOGGER << "Options:" << endl;
option.cpp:48:    LOGGER << "\nAnalysis finished: " << ctime(&curr);
option.cpp:50:    LOGGER << "Computational time: " << time_used / 3600 << ":" << (time_used % 3600) / 60 << ":" << time_used % 60 << endl;
option.cpp:178:    LOGGER << "Accepted options:" << endl;
option.cpp:182:            LOGGER << "--thread-num " << thread_num << endl;
option.cpp:187:            LOGGER << "--threads " << thread_num << endl;
option.cpp:192:            LOGGER << "--raw-files " << argv[i] << endl;
option.cpp:195:            LOGGER << "--raw-summary " << argv[i] << endl;
option.cpp:198:            LOGGER << "--gencall " << GC_cutoff << endl;
option.cpp:204:            LOGGER << "--bfile " << argv[i] << endl;
option.cpp:208:            LOGGER << "--mbfile " << argv[i] << endl;
option.cpp:211:            LOGGER << "--make-bed " << endl;
option.cpp:215:            LOGGER << "--bfile2 " << argv[i] << endl;
option.cpp:221:            LOGGER << "--dosage-mach " << dose_file << " " << dose_info_file << endl;
option.cpp:227:            LOGGER << "--dosage-mach-gz " << dose_file << " " << dose_info_file << endl;
option.cpp:234:            LOGGER << "--dosage-beagle " << dose_file << " " << dose_info_file << endl;
option.cpp:237:            LOGGER << "--imput-rsq " << dose_Rsq_cutoff << endl;
option.cpp:241:            LOGGER << "--update-imput-rsq " << update_impRsq_file << endl;
option.cpp:245:            LOGGER << "--update-freq " << update_freq_file << endl;
option.cpp:249:            LOGGER << "--update-ref-allele " << update_refA_file << endl;
option.cpp:253:            LOGGER << "--keep " << kp_indi_file << endl;
option.cpp:257:            LOGGER << "--remove " << rm_indi_file << endl;
option.cpp:261:            LOGGER << "--update-sex " << update_sex_file << endl;
option.cpp:265:            LOGGER << "--chr " << extract_chr_start << endl;
option.cpp:269:            LOGGER << "--autosome-num " << autosome_num << endl;
option.cpp:273:            LOGGER << "--autosome" << endl;
option.cpp:276:            LOGGER << "--extract " << extract_snp_file << endl;
option.cpp:280:            LOGGER << "--exclude " << exclude_snp_file << endl;
option.cpp:284:            LOGGER << "--extract-snp " << extract_snp_name << endl;
option.cpp:288:            LOGGER << "--extract-region-snp " << extract_snp_name << " " << extract_region_wind << "Kb" << endl;
option.cpp:295:            LOGGER << "--extract-region-bp " << extract_region_chr << " " << extract_region_bp << " " << extract_region_wind << "Kb" << endl;
option.cpp:300:            LOGGER << "--exclude-snp " << exclude_snp_name << endl;
option.cpp:304:            LOGGER << "--exclude-region-snp " << exclude_snp_name << exclude_region_wind << "Kb" << endl;
option.cpp:311:            LOGGER << "--exclude-region-bp " << exclude_region_chr << " " << exclude_region_bp << " " << exclude_region_wind << "Kb" << endl;
option.cpp:316:            LOGGER << "--maf " << maf << endl;
option.cpp:320:            LOGGER << "--max-maf " << max_maf << endl;
option.cpp:324:            LOGGER << "--out " << out << endl;
option.cpp:328:            LOGGER << "--freq-v1" << endl;
option.cpp:332:            LOGGER << "--freq" << endl;
option.cpp:335:            LOGGER << "--ssq" << endl;
option.cpp:339:            LOGGER << "--recode" << endl;
option.cpp:343:            LOGGER << "--recode-nomiss" << endl;
option.cpp:347:            LOGGER << "--recode-std" << endl;
option.cpp:350:            LOGGER << "--save-ram" << endl;
option.cpp:354:            LOGGER << "--paa " << paa_file << endl;
option.cpp:358:            LOGGER << "--ibc" << endl;
option.cpp:361:            LOGGER << "--ibc-all" << endl;
option.cpp:365:            LOGGER << argv[i - 1] << " " << grm_file << endl;
option.cpp:371:            LOGGER << "--mgrm-gz " << grm_file << endl;
option.cpp:375:            LOGGER << argv[i - 1] << " " << grm_file << endl;
option.cpp:381:            LOGGER << "--grm-gz " << grm_file << endl;
option.cpp:384:            LOGGER << "--rm-high-ld " << rm_high_ld_cutoff << endl;
option.cpp:389:            LOGGER << argv[i] << endl;
option.cpp:394:            LOGGER << "--make-grm-gz" << endl;
option.cpp:399:            LOGGER << "--make-grm-alg " << make_grm_mtd << endl;
option.cpp:406:            LOGGER << "--make-grm-f3" << endl;
option.cpp:411:            LOGGER << argv[i] << endl;
option.cpp:417:            LOGGER << "--make-grm-d-gz" << endl;
option.cpp:421:            LOGGER <<"--dominance"<< endl;
option.cpp:426:            LOGGER << argv[i] << endl;
option.cpp:432:            LOGGER << "--make-grm-xchr-gz" << endl;
option.cpp:437:            LOGGER << argv[i] << endl;
option.cpp:443:            LOGGER << "--make-grm-inbred-gz" << endl;
option.cpp:446:            LOGGER << "--grm-adj " << grm_adj_fac << endl;
option.cpp:450:            LOGGER << "--dc " << dosage_compen << endl;
option.cpp:454:            if (grm_cutoff >= -1 && grm_cutoff <= 2) LOGGER << "--grm-cutoff" << grm_cutoff << endl;
option.cpp:462:            else LOGGER << "--make-bK " << bK_threshold << endl;
option.cpp:471:            LOGGER << "--pca " << out_pc_num << endl;
option.cpp:478:            LOGGER << "--pc-loading " << pc_file <<  endl;
option.cpp:485:            LOGGER << "--project-loading " << project_file << " " << project_N << endl;
option.cpp:492:            LOGGER << "--ld " << LD_file << endl;
option.cpp:497:            LOGGER << "--ld-step " << LD_step << endl;
option.cpp:501:            LOGGER << argv[i - 1] << " " << LD_wind << endl;
option.cpp:510:            LOGGER << "--ld-sig " << LD_sig << endl;
option.cpp:514:            LOGGER << "--ld-i" << endl;
option.cpp:518:            LOGGER << "--ld-pruning " << LD_prune_rsq << endl;
option.cpp:523:            LOGGER << "--ld-score" << endl;
option.cpp:526:            LOGGER << "--ld-score-adj" << endl;
option.cpp:531:            LOGGER << "--ld-score-multi " << ld_score_multi_file << endl;
option.cpp:535:            LOGGER << "--ld-rsq-cutoff " << LD_rsq_cutoff << endl;
option.cpp:544:            LOGGER << "--ld-max-rsq" << endl;
option.cpp:553:            LOGGER << "--ld-score-region" << endl;
option.cpp:558:            LOGGER << "--ld-file " << LD_file << endl;
option.cpp:563:            LOGGER << "--simu-qt" << endl;
option.cpp:568:            LOGGER << "--simu-cc " << simu_case_num << " " << simu_control_num << endl;
option.cpp:573:            LOGGER << "--simu-rep " << simu_rep << endl;
option.cpp:577:            LOGGER << "--simu-hsq " << simu_h2 << endl;
option.cpp:581:            LOGGER << "--simu-k " << simu_K << endl;
option.cpp:585:            LOGGER << "--simu-causal-loci " << simu_causal << endl;
option.cpp:589:            LOGGER << "--simu-embayesb" << endl;
option.cpp:592:            LOGGER << "--simu-output-causal" << endl;
option.cpp:595:            LOGGER << "--simu-seed " << simu_seed << endl;
option.cpp:599:            LOGGER << "--simu-eff-mod " << simu_eff_mod << endl;
option.cpp:605:            LOGGER << "--hapmap-genet-dst " << hapmap_genet_dst_file << endl;
option.cpp:610:            LOGGER << "--HEreg" << endl;
option.cpp:630:            LOGGER << "--HEreg-bivar " << mphen << " " << mphen2 << endl;
option.cpp:634:            LOGGER << "--reml" << endl;
option.cpp:639:            LOGGER << "--prevalence " << prevalence << endl;
option.cpp:643:            LOGGER << "--reml-pred-rand" << endl;
option.cpp:646:            LOGGER << "--cvblup" << endl;
option.cpp:649:            LOGGER << "--reml-est-fix" << endl;
option.cpp:652:            LOGGER << "--reml-alg " << reml_mtd << endl;
option.cpp:657:            LOGGER << "--reml-no-constrain" << endl;
option.cpp:665:            LOGGER << "--reml-priors ";
option.cpp:668:                LOGGER << reml_priors[j] << " ";
option.cpp:671:            LOGGER << endl;
option.cpp:682:            LOGGER << s_buf << " ";
option.cpp:685:                LOGGER << reml_priors_var[j] << " ";
option.cpp:688:            LOGGER << endl;
option.cpp:692:            LOGGER << "--reml-no-lrt" << endl;
option.cpp:703:            LOGGER << "--reml-lrt ";
option.cpp:706:                LOGGER << reml_drop[j] << " ";
option.cpp:709:            LOGGER << endl;
option.cpp:713:            LOGGER << "--reml-maxit " << MaxIter << endl;
option.cpp:717:            LOGGER << "--reml-bendV " << endl;
option.cpp:720:            LOGGER << "--reml-force-converge " << endl;
option.cpp:723:            LOGGER << "--reml-allow-no-converge " << endl;
option.cpp:726:            LOGGER << "--reml-bending " << endl;
option.cpp:729:            LOGGER << "--reml-amzvc" << endl;
option.cpp:732:            LOGGER << "--reml-diag-one " << endl;
option.cpp:735:            LOGGER << "--reml-diagV-adj " << reml_diagV_adj << endl;
option.cpp:738:            LOGGER << "--reml-diag-mul " << reml_diag_mul << endl;
option.cpp:741:            LOGGER << "--reml-inv-mtd " << reml_inv_method << endl;
option.cpp:744:            LOGGER << "--pheno " << phen_file << endl;
option.cpp:748:            LOGGER << "--mpheno " << mphen << endl;
option.cpp:752:            LOGGER << "--qcovar " << qcovar_file << endl;
option.cpp:756:            LOGGER << "--covar " << covar_file << endl;
option.cpp:760:            LOGGER << "--reml-res-diag " << weight_file << endl;
option.cpp:764:            LOGGER << "--gxqe " << qgxe_file << endl;
option.cpp:768:            LOGGER << "--gxe " << gxe_file << endl;
option.cpp:773:            LOGGER << "--blup-snp " << blup_indi_file << endl;
option.cpp:778:            LOGGER << "--reml-wfam " << endl;
option.cpp:798:            LOGGER << "--reml-bivar " << mphen << " " << mphen2 << endl;
option.cpp:810:                LOGGER << "--reml-bivar-prevalence " << K_buf[0] << " " << K_buf[1] << endl;
option.cpp:815:                LOGGER << "--reml-bivar-prevalence " << K_buf[0] << endl;
option.cpp:820:            LOGGER << "--reml-bivar-nocove" << endl;
option.cpp:828:            LOGGER << "--reml-bivar-lrt-rg ";
option.cpp:831:                LOGGER << fixed_rg_val[j] << " ";
option.cpp:834:            LOGGER << endl;
option.cpp:843:            LOGGER << "--reml-bivar-no-constrain" << endl;
option.cpp:846:            LOGGER << "--cojo-file " << massoc_file << endl;
option.cpp:851:            LOGGER << "--cojo-slct" << endl;
option.cpp:855:            LOGGER << "--cojo-stepwise" << endl;
option.cpp:859:            LOGGER << "--cojo-forward" << endl;
option.cpp:863:            LOGGER << "--cojo-backward" << endl;
option.cpp:867:            LOGGER << "--cojo-top-SNPs " << massoc_top_SNPs << endl;
option.cpp:871:            LOGGER << "--cojo-actual-geno is deprecated currently." << endl;
option.cpp:874:            LOGGER << "--cojo-p " << massoc_p << endl;
option.cpp:880:            LOGGER << "--cojo-collinear " << massoc_collinear << endl;
option.cpp:884:            LOGGER << "--cojo-wind " << massoc_wind << endl;
option.cpp:893:            LOGGER << "--cojo-joint" << endl;
option.cpp:896:            LOGGER << "--cojo-cond " << massoc_cond_snplist << endl;
option.cpp:907:            LOGGER << "--cojo-gc " << ((massoc_gc_val < 0) ? "" : argv[i]) << endl;
option.cpp:911:            LOGGER << "--cojo-sblup " << massoc_sblup_fac << endl;
option.cpp:917:            LOGGER << "--mlma " << endl;
option.cpp:920:            LOGGER << "--mlma-subtract-grm " << subtract_grm_file << endl;
option.cpp:925:            LOGGER << "--mlma-loco " << endl;
option.cpp:928:            LOGGER << "--mlma-no-adj-covar (use --mlma-no-preadj-covar instead)" << endl;
option.cpp:931:            LOGGER << "--mlma-no-preadj-covar" << endl;	
option.cpp:934:            LOGGER << "--fst " << endl;
option.cpp:937:            LOGGER << "--sub-popu " << subpopu_file << endl;
option.cpp:941:            LOGGER << "--fastBAT-ld-cutoff " << sbat_ld_cutoff << endl;
option.cpp:945:            LOGGER << "--fastBAT-write-snpset" << endl;
option.cpp:948:            LOGGER << "--fastBAT " << sbat_sAssoc_file << endl;
option.cpp:952:            LOGGER << "--fastBAT-gene-list " << sbat_gAnno_file << endl;
option.cpp:956:            LOGGER << "--fastBAT-set-list " << sbat_snpset_file << endl;
option.cpp:960:            LOGGER << "--fastBAT-wind " << sbat_wind << endl;
option.cpp:971:            LOGGER << "--fastBAT-seg " << sbat_seg_size << endl;
option.cpp:978:            LOGGER << "--efile " << efile << endl;
option.cpp:984:            LOGGER << "--e-cor " << eR_file << endl;
option.cpp:989:            LOGGER << "--ecojo " << ecojo_ma_file << endl;
option.cpp:994:            LOGGER << "--ecojo-slct" << endl;
option.cpp:998:            LOGGER << "--ecojo-p " << ecojo_p << endl;
option.cpp:1003:            LOGGER << "--ecojo-collinear " << ecojo_collinear << endl;
option.cpp:1009:            LOGGER << "--ecojo-blup " << ecojo_lambda << endl;
option.cpp:1015:            LOGGER << argv[i] << endl;
option.cpp:1021:            LOGGER << "--make-erm-gz" << endl;
option.cpp:1027:            LOGGER << "--make-erm-alg " << make_erm_mtd << endl;
option.cpp:1044:            LOGGER << "--gsmr-file " << expo_file_list << " " << outcome_file_list << endl;
option.cpp:1049:            LOGGER << "--gsmr2-beta" << endl;
option.cpp:1054:            LOGGER << "--gsmr-direction " << gsmr_alg_flag << endl;
option.cpp:1062:            LOGGER << "--gsmr-so " << gsmr_so_alg << endl;
option.cpp:1065:            LOGGER << "--effect-plot" << endl;
option.cpp:1069:            LOGGER << "--mtcojo-file " << mtcojolist_file << endl;
option.cpp:1073:            LOGGER << "--mtcojo-bxy " << mtcojo_bxy_file << endl;
option.cpp:1087:            LOGGER << "--ref-ld-chr " << ref_ld_dirt << endl;
option.cpp:1100:            LOGGER << "--w-ld-chr " << w_ld_dirt << endl;
option.cpp:1162:            LOGGER << "--gwas-adj-pc " << pcadjust_list_file << endl;
option.cpp:1166:            LOGGER << "--gwas-adj-pc-wind " << pc_adj_wind_size << endl;
option.cpp:1176:    LOGGER << endl;
option.cpp:1182:            LOGGER << "Warning: --grm option suppressed by the --mgrm option." << endl;
option.cpp:1186:            LOGGER << "Warning: --grm-cutoff option suppressed by the --mgrm option." << endl;
option.cpp:1192:            LOGGER << "Warning: --grm-adj option suppressed by the --pca option." << endl;
option.cpp:1195:            LOGGER << "Warning: --dosage-compen option suppressed by the --pca option." << endl;
option.cpp:1199:        LOGGER << "Warning: --gxe option is ignored because there is no --grm or --mgrm option specified." << endl;
option.cpp:1203:        LOGGER << "Warning: --reml-pred-rand option is ignored because there is no --grm or --mgrm option specified." << endl;
option.cpp:1207:        LOGGER << "Warning: --cvblup option is ignored because there is no --grm or --mgrm option specified." << endl;
option.cpp:1211:        LOGGER << "Warning: --reml-pred-rand options is ignored because --cvblup does more than this option" << endl;
option.cpp:1220:        if (!gxe_file.empty()) LOGGER << "Warning: the option --gxe option is disabled in this analysis." << endl;
option.cpp:1221:        if (!update_sex_file.empty()) LOGGER << "Warning: the option --update-sex option is disabled in this analysis." << endl;
option.cpp:1222:        if (grm_adj_fac>-1.0) LOGGER << "Warning: the option --grm-adj option is disabled in this analysis." << endl;
option.cpp:1223:        if (dosage_compen>-1.0) LOGGER << "Warning: the option --dc option is disabled in this analysis." << endl;
option.cpp:1224:        if (est_fix_eff) LOGGER << "Warning: the option --reml-est-fix option is disabled in this analysis." << endl;
option.cpp:1225:        if (pred_rand_eff) LOGGER << "Warning: the option --reml-pred-rand option is disabled in this analysis." << endl;
option.cpp:1226:        if(cv_blup) LOGGER << "Warning: the option --cvblup option is disabled in this analysis." << endl;
option.cpp:1227:        if (reml_lrt_flag) LOGGER << "Warning: the option --reml-lrt option is disabled in this analysis." << endl; 
option.cpp:1251:        if (thread_num == 1) LOGGER << "Note: This is a multi-thread program. You could specify the number of threads by the --thread-num option to speed up the computation if there are multiple processors in your machine." << endl;
option.cpp:1252:        else LOGGER << "Note: the program will be running on " << thread_num << " threads." << endl;
option.cpp:1258:            LOGGER << "Warning: --autosome option omitted. You have specified the chromosome to analysis." << endl;
option.cpp:1267:    LOGGER << endl;
option.cpp:1300:                LOGGER << "There are two datasets specified (in PLINK binary PED format).\nReading dataset 1 ..." << endl;
option.cpp:1387:        if (extract_chr_start > 0) LOGGER << "Warning: the option --chr, --autosome or --nonautosome is inactive for dosage data." << endl;
pc_adjust.cpp:485:        LOGGER << "PC" << i << ", bxy = " << bxy_hat(i-1) << endl;
sbat.cpp:19:    LOGGER << "\nReading SNP association results from [" + snpAssoc_file + "]." << endl;
sbat.cpp:37:    LOGGER << "Association p-values of " << snp_name.size() << " SNPs have been included." << endl;
sbat.cpp:70:    LOGGER << "Reading physical positions of the genes from [" + gAnno_file + "]." << endl;
sbat.cpp:81:    LOGGER << "Physical positions of " << gene_name.size() << " genes have been include." << endl;
sbat.cpp:115:    LOGGER << "Mapping the physical positions of genes to SNP data (gene bounaries: " << wind / 1000 << "Kb away from UTRs) ..." << endl;
sbat.cpp:157:    else LOGGER << mapped << " genes have been mapped to SNP data." << endl;
sbat.cpp:161:    LOGGER << "\nRunning fastBAT analysis for genes ..." << endl;
sbat.cpp:162:    if (sbat_ld_cutoff < 1) LOGGER << "Pruning SNPs with LD rsq cutoff = " << sbat_ld_cutoff*sbat_ld_cutoff  << endl;
sbat.cpp:222:        if((i + 1) % 100 == 0 || (i + 1) == gene_num) LOGGER << i + 1 << " of " << gene_num << " genes.\r";
sbat.cpp:226:    LOGGER << "\nSaving the results of the fastBAT analysis to [" + filename + "] ..." << endl;
sbat.cpp:239:        LOGGER << "The SNP sets have been save in file [" << rgoodsnpfile << "]." << endl;
sbat.cpp:248:    LOGGER << "\nReading SNP sets from [" + snpset_file + "]." << endl;
sbat.cpp:271:    LOGGER << snp_name.size() << " SNPs in " << snpset.size() << " sets have been included." << endl;
sbat.cpp:295:    LOGGER << "\nRunning fastBAT analysis ..." << endl;
sbat.cpp:296:    if (sbat_ld_cutoff < 1) LOGGER << "Pruning snps with maximum ld cutoff " << sbat_ld_cutoff  << endl;
sbat.cpp:360:        if((i + 1) % 100 == 0 || (i + 1) == set_num) LOGGER << i + 1 << " of " << set_num << " sets.\r";
sbat.cpp:364:    LOGGER << "\nSaving the results of the fastBAT analysis to [" + filename + "] ..." << endl;
sbat.cpp:375:        LOGGER << "The SNP sets have been save in file [" << rgoodsnpfile << "]." << endl;
sbat.cpp:395:    LOGGER << "\nRunning fastBAT analysis at genomic segments with a length of " << seg_size/1000 << "Kb ..." << endl;
sbat.cpp:396:    if (sbat_ld_cutoff < 1) LOGGER << "Pruning snps with maximum ld cutoff " << sbat_ld_cutoff  << endl;
sbat.cpp:456:        if((i + 1) % 100 == 0 || (i + 1) == set_num) LOGGER << i + 1 << " of " << set_num << " sets.\r";
sbat.cpp:460:    LOGGER << "\nSaving the results of the segment-based fastBAT analysis to [" + filename + "] ..." << endl;
sbat.cpp:473:        LOGGER << "The SNP sets have been save in file [" << rgoodsnpfile << "]." << endl;
